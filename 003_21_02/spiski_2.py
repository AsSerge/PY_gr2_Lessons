# Частотный анализ текста
ROWText = "В одном селе, возле Блудова болота, в районе города Переславль-Залесского, осиротели двое детей. Их мать умерла от болезни, отец погиб на Отечественной войне. Мы жили в этом селе всего только через один дом от детей. И, конечно, мы тоже вместе с другими соседями старались помочь им, чем только могли. Они были очень милые. Настя была как золотая курочка на высоких ногах. Волосы у нее, ни темные, ни светлые, отливали золотом, веснушки по всему лицу были крупные, как золотые монетки, и частые, и тесно им было, и лезли они во все стороны. Только носик один был чистенький и глядел вверх попугайчиком. Митраша был моложе сестры на два года. Ему было всего только десять лет с хвостиком. Он был коротенький, но очень плотный, лобастый, затылок широкий. Это был мальчик упрямый и сильный."

#Получаем список уникальных символов
TextBase = list(ROWText.replace('.', '').replace(',', '').replace('-', '').replace('\"', '').replace(' ', '').lower())
print ("Всего символов", len(TextBase), "исключая пробелы и знаки препинания")

U_Letter = set(TextBase)
print ("Уникальных символов",len(U_Letter), "(все символы приведены к одному регистру)")
# Создаем словарь U_Count
U_Count = {}
# Заполняем словарь парами ключ / значение
for u in U_Letter:    
    U_Count.update({u:TextBase.count(u)})

# Функция сортировки словаря по значению
def sort_dictionary_by_value(dictionary):
    list_of_sorted_pairs = [(k, dictionary[k]) for k in sorted(dictionary.keys(), key=dictionary.get, reverse=True)]
    return list_of_sorted_pairs

New_D = sort_dictionary_by_value(U_Count)
for i in New_D:
    # Считаем процентное соотношение
    U_Percent = round((int(i[1]*100) / len(TextBase)), 2)
    print(i[0], " - ",str(U_Percent)+"%")
    
